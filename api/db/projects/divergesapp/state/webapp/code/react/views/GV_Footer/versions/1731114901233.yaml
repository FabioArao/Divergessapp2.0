_updated: 1731151379499
_processing: false
key: webapp.react.views.GV_Footer.1731114901233
data:
  analysis: >-
    Analysis for GV_Footer component:


    1. Purpose:
       The GV_Footer is a global component that appears at the bottom of all pages in the DivergesiApp. It provides consistent access to important links, legal information, and support contacts across the entire application.

    2. Key Features:
       - Copyright information (prominently displayed and centered)
       - Links to Terms of Service and Privacy Policy
       - Social media icons (if applicable)
       - Contact information (email or support phone number)
       - Language selector (for multi-language support)
       - Responsive design for mobile devices

    3. State Management:
       - The component will use a local state for the selected language.
       - It will access the global auth state to determine if certain links should be displayed based on the user type.

    4. Interactions:
       - Language selection: When a user changes the language, it should update the local state and potentially make an API call to update the user's preference.
       - External links: All links should open in a new tab to prevent disruption of the current session.

    5. Accessibility:
       - Include an accessibility statement link.
       - Ensure proper ARIA attributes are used for interactive elements.

    6. Responsive Design:
       - The footer should adjust its layout for mobile devices to maintain readability and usability.

    7. Implementation Considerations:
       - Use Tailwind CSS for styling to maintain consistency with the rest of the application.
       - Implement the language change functionality, including an API call to update the user's preference.
       - Use React.FC type for the component definition.
       - Utilize the Redux store for accessing the authentication state.
  tsx: >-
    import React, { useState, useEffect } from 'react';

    import { useSelector, useDispatch } from 'react-redux';

    import { Link } from 'react-router-dom';

    import { AppState, AppDispatch } from '@/store/main';

    import axios from 'axios';


    const GV_Footer: React.FC = () => {
      const dispatch: AppDispatch = useDispatch();
      const auth = useSelector((state: AppState) => state.auth);
      const [selectedLanguage, setSelectedLanguage] = useState('en');

      const languages = [
        { code: 'en', name: 'English' },
        { code: 'es', name: 'Español' },
        { code: 'fr', name: 'Français' },
      ];

      const handleLanguageChange = async (e: React.ChangeEvent<HTMLSelectElement>) => {
        const newLanguage = e.target.value;
        setSelectedLanguage(newLanguage);

        if (auth.is_authenticated && auth.token) {
          try {
            await axios.put(
              'http://localhost:1337/api/users/language',
              { language: newLanguage },
              { headers: { Authorization: `Bearer ${auth.token}` } }
            );
            // You might want to dispatch an action here to update the global state with the new language
            // For now, we'll just log the success
            console.log('Language preference updated successfully');
          } catch (error) {
            console.error('Failed to update language preference', error);
          }
        }
      };

      useEffect(() => {
        // Initialize the language based on the user's preference if authenticated
        if (auth.is_authenticated && auth.user?.language) {
          setSelectedLanguage(auth.user.language);
        }
      }, [auth.is_authenticated, auth.user]);

      return (
        <footer className="bg-gray-100 border-t border-gray-200">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              <div className="flex flex-col items-center md:items-start">
                <h3 className="text-lg font-semibold mb-2">DivergesiApp</h3>
                <p className="text-sm text-gray-600 text-center md:text-left">
                  Empowering education through seamless collaboration.
                </p>
              </div>
              <div className="flex flex-col items-center md:items-start">
                <h3 className="text-lg font-semibold mb-2">Quick Links</h3>
                <ul className="space-y-2 text-sm">
                  <li>
                    <Link to="/" className="text-blue-600 hover:text-blue-800">
                      Home
                    </Link>
                  </li>
                  {auth.is_authenticated && (
                    <li>
                      <Link to="/dashboard" className="text-blue-600 hover:text-blue-800">
                        Dashboard
                      </Link>
                    </li>
                  )}
                  <li>
                    <a
                      href="/terms-of-service"
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-blue-600 hover:text-blue-800"
                    >
                      Terms of Service
                    </a>
                  </li>
                  <li>
                    <a
                      href="/privacy-policy"
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-blue-600 hover:text-blue-800"
                    >
                      Privacy Policy
                    </a>
                  </li>
                  <li>
                    <a
                      href="/accessibility"
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-blue-600 hover:text-blue-800"
                    >
                      Accessibility
                    </a>
                  </li>
                </ul>
              </div>
              <div className="flex flex-col items-center md:items-start">
                <h3 className="text-lg font-semibold mb-2">Contact Us</h3>
                <p className="text-sm text-gray-600 mb-2">support@divergesiapp.com</p>
                <p className="text-sm text-gray-600 mb-4">+1 (555) 123-4567</p>
                <div className="flex space-x-4">
                  <a href="https://facebook.com" target="_blank" rel="noopener noreferrer" aria-label="Facebook">
                    <svg className="w-6 h-6 text-blue-600 hover:text-blue-800" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z"></path>
                    </svg>
                  </a>
                  <a href="https://twitter.com" target="_blank" rel="noopener noreferrer" aria-label="Twitter">
                    <svg className="w-6 h-6 text-blue-400 hover:text-blue-600" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z"></path>
                    </svg>
                  </a>
                  <a href="https://linkedin.com" target="_blank" rel="noopener noreferrer" aria-label="LinkedIn">
                    <svg className="w-6 h-6 text-blue-700 hover:text-blue-900" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z" />
                    </svg>
                  </a>
                </div>
              </div>
            </div>
            <div className="mt-8 pt-8 border-t border-gray-200 flex flex-col-reverse md:flex-row justify-between items-center">
              <p className="text-sm text-gray-600 mt-4 md:mt-0">
                © {new Date().getFullYear()} DivergesiApp. All rights reserved.
              </p>
              <div className="flex items-center">
                <label htmlFor="language-select" className="sr-only">
                  Select Language
                </label>
                <select
                  id="language-select"
                  className="block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md"
                  value={selectedLanguage}
                  onChange={handleLanguageChange}
                >
                  {languages.map((lang) => (
                    <option key={lang.code} value={lang.code}>
                      {lang.name}
                    </option>
                  ))}
                </select>
              </div>
            </div>
          </div>
        </footer>
      );
    };


    export default GV_Footer;
  dependencies:
    react: "*"
    react-dom: "*"
    react-redux: "*"
    react-router-dom: "*"
    axios: "*"
  timestamp: "1731114901233"
